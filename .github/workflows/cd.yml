# name: Deploy to EC2

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Login to AWS
#       id: login-aws
#       uses: aws-actions/configure-aws-credentials@v1
#       with:
#         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         aws-region: ${{ secrets.AWS_REGION }}

#     - name: Pull image from AWS Container Registry
#       run: |
#         $(aws ecr get-login --no-include-email)
#         export REPO=${{ secrets.AWS_ECR_REPOSITORY }}
#         docker pull ${REPO}

#     - name: Create IAM Role
#       run: |
#         export ROLE_NAME=EC2ContainerRegistryReadOnly
#         export POLICY_ARN=arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
#         aws iam create-role --role-name ${ROLE_NAME} --assume-role-policy-document file://role-policy.json
#         aws iam attach-role-policy --role-name ${ROLE_NAME} --policy-arn ${POLICY_ARN}

#     - name: Attach IAM Role to EC2 instance
#       run: |
#         export INSTANCE_ID=${{ secrets.EC2_INSTANCE_ID }}
#         export ROLE_NAME=EC2ContainerRegistryReadOnly
#         aws ec2 associate-iam-instance-profile --instance-id ${INSTANCE_ID} --iam-instance-profile Name=${ROLE_NAME}

#     - name: Run container using docker-compose
#       run: |
#         export REPO=${{ secrets.AWS_ECR_REPOSITORY }}
#         export EC2_IP=${{ secrets.EC2_IP }}
#         docker-compose up -d --build --force-recreate
